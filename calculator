package main

import (
	"fmt"
	"strconv"
	"time"
)

func Calc(a string, ch chan uint64) uint64 {
	var c uint64
	if string(a[1]) == "+" {
		c1, _ := strconv.ParseUint(string(a[0]), 0, 64)
		c2, _ := strconv.ParseUint(string(a[2]), 0, 64)
		c = c1 + c2
	}
	if string(a[1]) == "-" {
		c1, _ := strconv.ParseUint(string(a[0]), 0, 64)
		c2, _ := strconv.ParseUint(string(a[2]), 0, 64)
		c = c1 - c2
	}
	if string(a[1]) == "*" {
		c1, _ := strconv.ParseUint(string(a[0]), 0, 64)
		c2, _ := strconv.ParseUint(string(a[2]), 0, 64)
		c = c1 * c2
	}
	if string(a[1]) == "/" {
		c1, _ := strconv.ParseUint(string(a[0]), 0, 64)
		c2, _ := strconv.ParseUint(string(a[2]), 0, 64)
		c = c1 / c2
	}
	ch <- c
	return c
}

func main() {
	s := make([]string, 4)
	res := make([]uint64, 4)
	ch := make(chan uint64)
	st := "2+2,3+6,7*7,9/3"
	j := 0
	k := 0
	for i := 0; i < len(st); i++ {
		sts := st[i]
		if string(sts) == "," {
			s[j] = string(st[k:i])
			j = j + 1
			k = i + 1
		}
		if i == len(st)-1 {
			s[j] = string(st[k:])
		}
	}
	fmt.Println(s) // срез условий
	for i := 0; i < 4; i++ {
		go Calc(s[i], ch)
		time.Sleep(1 * time.Millisecond)
	}
	res[0] = <-ch
	res[1] = <-ch
	res[2] = <-ch
	res[3] = <-ch
	fmt.Println(s[0], "=", res[0], ", ", s[1], "=", res[1], ", ", s[2], "=", res[2], ", ", s[3], "=", res[3])
}
